// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Templates ApiKey has FetchData 1`] = `
"
  static action(context: TAPIKEYAuthContext, params: any, body: any, callback: TFetchDataCallback) {
    //... your code goes here
    // use the client defined in client.ts to fetch real object like that:
    // Client(context.authAccess.apiKey).get('/people')
    //   .then(({ data }) => {
    //     callback({ data })
    //   })
    //   .catch((error) => {
    //     callback({ error: error.toString() })
    //   })
    callback({ data: []})
  }
  "
`;

exports[`Templates ApiKey has SaveState 1`] = `
"
  static action(
    _context: TAPIKEYAuthContext,
    _params: any,
    body: any,
    state: any,
    callback: TSaveStateCallback
  ): void {
    const { item: { name } } = body
    const { items = [] }: any = state
    const newItem: any = { name }

    callback({
      state: {
        ...state,
        items: [...items, newItem]
      },
      data: [...items, newItem]
    })
  }
  "
`;

exports[`Templates Basic has FetchData 1`] = `
"
  static action(context: TBASICAuthContext, params: any, body: any, callback: TFetchDataCallback) {
    //... your code goes here
    // use the client defined in client.ts to fetch real object like that:
    // Client(
    //   context.authAccess.username,
    //   context.authAccess.password
    // ).get('/people').then(({ data }) => {
    //     callback({ data })
    //   })
    //   .catch((error) => {
    //     callback({ error: error.toString() })
    //   })
    callback({ data: []})
  }
  "
`;

exports[`Templates Basic has SaveState 1`] = `
"
  static action(
    _context: TBASICAuthContext,
    _params: any,
    body: any,
    state: any,
    callback: TSaveStateCallback
  ): void {
    const { item: { name } } = body
    const { items = [] }: any = state
    const newItem: any = { name }

    callback({
      state: {
        ...state,
        items: [...items, newItem]
      },
      data: [...items, newItem]
    })
  }
  "
`;

exports[`Templates NoAuth has FetchData 1`] = `
"
  static action(context: TNONEAuthContext, params: any, body: any, callback: TFetchDataCallback) {
    //... your code goes here
    callback({ data: []})
  }"
`;

exports[`Templates NoAuth has SaveState 1`] = `
"
  static action(
    _context: TNONEAuthContext,
    _params: any,
    body: any,
    state: any,
    callback: TSaveStateCallback
  ): void {
    const { item: { name } } = body
    const { items = [] }: any = state
    const newItem: any = { name }

    callback({
      state: {
        ...state,
        items: [...items, newItem]
      },
      data: [...items, newItem]
    })
  }
  "
`;

exports[`Templates OAuth2 has FetchData 1`] = `
"
  static action(context: TOAUTH2AuthContext, params: any, body: any, callback: TFetchDataCallback) {
    //... your code goes here
    // use the client defined in client.ts to fetch real object like that:
    // Client(context.authAccess.accessToken).get('/people').then(({ data }) => {
    //     callback({ data })
    //   })
    //   .catch((error) => {
    //     callback({ error: error.toString() })
    //   })
    callback({ data: []})
  }"
`;

exports[`Templates OAuth2 has SaveState 1`] = `
"
  static action(
    _context: TOAUTH2AuthContext,
    _params: any,
    body: any,
    state: any,
    callback: TSaveStateCallback
  ): void {
    const { item: { name } } = body
    const { items = [] }: any = state
    const newItem: any = { name }

    callback({
      state: {
        ...state,
        items: [...items, newItem]
      },
      data: [...items, newItem]
    })
  }
  "
`;
