// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`bearer cleaning transformer event emitter type match snapshot 1`] = `
Object {
  "file": "event-emitter-type.ts",
  "postContent": "import { EventEmitter, Event, Prop, Component } from '@bearer/core';
type Goat = {
    color: string;
};
type Panda = {
    panda: string;
};
@Component({
    tag: \\"feature-display\\",
    styleUrl: \\"feature.css\\",
    shadow: true
})
export class Component {
    @Event({ eventName: \\"bearer|SPONGE_BOB|feature|feed\\" })
    feed: EventEmitter;
    // TODO: Keep the type if it is used with prop or method: ex goat
    // note: keeping it aside until we really need it
    @Event({ eventName: \\"bearer|SPONGE_BOB|feature|keptAsIs\\" })
    keptAsIs: EventEmitter;
    @Prop()
    goat: Goat;
    // transformed to any because isn't imported by Stencil later
    @Event({ eventName: \\"bearer|SPONGE_BOB|feature|pandaIsAnyfied\\" })
    pandaIsAnyfied: EventEmitter;
    constructor() {
    }
    get SCENARIO_ID() { return \\"SPONGE_BOB\\"; }
    @Prop({ \\"context\\": \\"bearer\\" })
    bearerContext: any;
    @Prop()
    setupId: string;
    componentDidLoad() {
        if (this.setupId) {
            this.bearerContext.setupId = this.setupId;
        }
    }
}
",
}
`;
