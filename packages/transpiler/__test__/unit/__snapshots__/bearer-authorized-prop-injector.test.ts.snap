// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`bearer-authorized required property file: do-nothing.tsx transformer 1`] = `
"import { Component, RootComponent } from '@bearer/core';
@RootComponent({
    name: 'feature'
})
class RootComponent {
    renderFromANotherProp() {
        return <sponge-bob title=\\"Sponge element\\"/>;
    }
    render() {
        return <div />;
    }
}
@Component({
    tag: 'sponge-bob'
})
class SubComponent {
    render() {
        return <div title=\\"spongeBNob\\"/>;
    }
}
"
`;

exports[`bearer-authorized required property file: inject-prop-to-tsx-element.tsx transformer 1`] = `
"import { Component, RootComponent } from '@bearer/core';
@RootComponent({
    name: 'feature-action'
})
class RootComponent {
    render() {
        return (<bearer-navigator>
        <bearer-navigator-auth-screen scenarioId=\\"SPONGE_BOB\\"/>
      </bearer-navigator>);
    }
}
@Component({
    tag: 'sponge-bob'
})
class SimpleComponent {
    render() {
        return (<bearer-navigator>
        <bearer-navigator-auth-screen scenarioId=\\"SPONGE_BOB\\"/>
      </bearer-navigator>);
    }
}
@Component({
    tag: 'sponge-bob'
})
class WithBearerAuthorizedComponent {
    render() {
        return <bearer-authorized renderAuthorized={() => <div />} renderUnauthorized={() => <span />} scenarioId=\\"SPONGE_BOB\\"/>;
    }
}
@Component({
    tag: 'sponge-bob'
})
class OverrideValueGiven {
    render() {
        return (<bearer-authorized renderAuthorized={() => <div />} renderUnauthorized={() => <span />} scenarioId=\\"SPONGE_BOB\\"/>);
    }
}
"
`;
