// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Scope Event Names file: event-name-scoping-component.ts transformer 1`] = `
"import { Event, EventEmitter, Listen, RootComponent } from '@bearer/core';
@RootComponent({
    group: 'complex-feature',
    role: 'display'
})
export class FeatDisplayRootComponent {
    @Event({ eventName: \\"bearer-SPONGE_BOB-global-mustBeScopedEvent\\" })
    mustBeScopedEvent: EventEmitter;
    @Event({ eventName: \\"bearer-SPONGE_BOB-global-mustBeScopedEvent\\" })
    mustBeScopedEvent: EventEmitter;
    @Listen(\\"bearer-SPONGE_BOB-config-saved\\")
    eventHandler() { }
    @Listen(\\"body:bearer-SPONGE_BOB-eventFromAnotherRootComponent-saved\\")
    eventFromAnotherRootComponentHandler() { }
    @Listen(\\"body:bearer-SPONGE_BOB-click\\")
    clickHandler() { }
}
"
`;

exports[`Scope Event Names file: simple-component.ts transformer 1`] = `
"import { Component, Event, EventEmitter, Listen } from '@bearer/core';
@Component({
    tag: 'event'
})
export class SimpleComponent {
    @Event({ eventName: \\"bearer-SPONGE_BOB-global-mustBeScopedEvent\\" })
    mustBeScopedEvent: EventEmitter;
    @Listen(\\"bearer-SPONGE_BOB-config-saved\\")
    eventHandler() { }
    @Listen(\\"bearer-SPONGE_BOB-eventFromChildren\\")
    eventFromChildrenHandler() { }
    // prevent Alice to listen on anything else than her scenario's events
    @Listen(\\"body:bearer-SPONGE_BOB-click\\")
    clickHandler() { }
}
"
`;
