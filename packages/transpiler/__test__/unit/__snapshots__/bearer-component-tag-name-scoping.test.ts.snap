// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NO scope provided add bearer scope match snapshot 1`] = `
Object {
  "file": "add-bearer-scope.tsx",
  "postContent": "import { Prop } from \\"@bearer/core\\";
@Component({
    tag: \\"feature-action\\",
    styleUrl: \\"feature.css\\",
    shadow: true
})
class RootComponent {
    renderFromANotherProp() {
        return <sponge-bob title=\\"Sponge element\\"/>;
    }
    render() {
        return (<div>
        <sponge-bob>
          <span>Something</span>
        </sponge-bob>
        <patrick title=\\"Patrick element\\"/>
      </div>);
    }
    constructor() { }
    get SCENARIO_ID() { return \\"SPONGE_BOB\\"; }
    @Prop({ \\"context\\": \\"bearer\\" })
    bearerContext: any;
    @Prop()
    setupId: string;
    componentDidLoad() { if (this.setupId) {
        this.bearerContext.setupId = this.setupId;
    } }
}
@Component({
    tag: 'sponge-bob'
})
class SubComponent {
    render() {
        return <div title=\\"spongeBNob\\"/>;
    }
    constructor() { }
    get SCENARIO_ID() { return \\"SPONGE_BOB\\"; }
    @Prop({ \\"context\\": \\"bearer\\" })
    bearerContext: any;
    @Prop()
    setupId: string;
    componentDidLoad() { if (this.setupId) {
        this.bearerContext.setupId = this.setupId;
    } }
}
@Component({
    tag: 'patrick'
})
class Patrick {
    render() {
        return <div title=\\"Patrick\\"/>;
    }
    constructor() { }
    get SCENARIO_ID() { return \\"SPONGE_BOB\\"; }
    @Prop({ \\"context\\": \\"bearer\\" })
    bearerContext: any;
    @Prop()
    setupId: string;
    componentDidLoad() { if (this.setupId) {
        this.bearerContext.setupId = this.setupId;
    } }
}
",
}
`;

exports[`With provided scenario ID add bearer scope match snapshot 1`] = `
Object {
  "file": "add-bearer-scope.tsx",
  "postContent": "import { Prop } from \\"@bearer/core\\";
@Component({
    tag: \\"bearer-feature-action-xyz\\",
    styleUrl: \\"feature.css\\",
    shadow: true
})
class RootComponent {
    renderFromANotherProp() {
        return <bearer-sponge-bob-xyz title=\\"Sponge element\\"/>;
    }
    render() {
        return (<div>
        <bearer-sponge-bob-xyz>
          <span>Something</span>
        </bearer-sponge-bob-xyz>
        <bearer-patrick-xyz title=\\"Patrick element\\"/>
      </div>);
    }
    constructor() { }
    get SCENARIO_ID() { return \\"SPONGE_BOB\\"; }
    @Prop({ \\"context\\": \\"bearer\\" })
    bearerContext: any;
    @Prop()
    setupId: string;
    componentDidLoad() { if (this.setupId) {
        this.bearerContext.setupId = this.setupId;
    } }
}
@Component({
    tag: 'sponge-bob'
})
class SubComponent {
    render() {
        return <div title=\\"spongeBNob\\"/>;
    }
    constructor() { }
    get SCENARIO_ID() { return \\"SPONGE_BOB\\"; }
    @Prop({ \\"context\\": \\"bearer\\" })
    bearerContext: any;
    @Prop()
    setupId: string;
    componentDidLoad() { if (this.setupId) {
        this.bearerContext.setupId = this.setupId;
    } }
}
@Component({
    tag: 'patrick'
})
class Patrick {
    render() {
        return <div title=\\"Patrick\\"/>;
    }
    constructor() { }
    get SCENARIO_ID() { return \\"SPONGE_BOB\\"; }
    @Prop({ \\"context\\": \\"bearer\\" })
    bearerContext: any;
    @Prop()
    setupId: string;
    componentDidLoad() { if (this.setupId) {
        this.bearerContext.setupId = this.setupId;
    } }
}
",
}
`;
