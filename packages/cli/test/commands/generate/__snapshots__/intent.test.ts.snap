// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Generate generate:intent Fetch intent 1`] = `
"import { FetchData, TAPIKEYAuthContext, TFetchDataCallback } from '@bearer/intents'
// Uncomment this line if you need to use Client
// import Client from './client'

export default class FetchDataIntentIntent {
  static intentName: string = 'FetchDataIntent'
  static intentType: any = FetchData

  
  static action(context: TAPIKEYAuthContext, params: any, body: any, callback: TFetchDataCallback) {
    //... your code goes here
    // use the client defined in client.ts to fetch real object like that:
    // Client(context.authAccess.apiKey).get('/people')
    //   .then(({ data }) => {
    //     callback({ data })
    //   })
    //   .catch((error) => {
    //     callback({ error: error.toString() })
    //   })
    callback({ data: []})
  }
  
}
"
`;

exports[`Generate generate:intent Retrieve intent 1`] = `
"import { RetrieveState, TAPIKEYAuthContext, TRetrieveStateCallback } from '@bearer/intents'
// Uncomment this line if you need to use Client
// import Client from './client'

export default class RetrieveIntentIntent {
  static intentName: string = 'RetrieveIntent'
  static intentType: any = RetrieveState

  
  static action(_context: TAPIKEYAuthContext, _params: any, state, callback: TRetrieveStateCallback) {
    callback({ data: state })
  }
  
}
"
`;

exports[`Generate generate:intent Save intent 1`] = `
"import { SaveState, TAPIKEYAuthContext, TSaveStateCallback } from '@bearer/intents'
// Uncomment this line if you need to use Client
// import Client from './client'

export default class SaveIntentIntent {
  static intentName: string = 'SaveIntent'
  static intentType: any = SaveState

  
  static action(
    _context: TAPIKEYAuthContext,
    _params: any,
    body: any,
    state: any,
    callback: TSaveStateCallback
  ): void {
    const { item: { name } } = body
    const { items = [] }: any = state
    const newItem: any = { name }

    callback({
      state: {
        ...state,
        items: [...items, newItem]
      },
      data: [...items, newItem]
    })
  }
  
}
"
`;
