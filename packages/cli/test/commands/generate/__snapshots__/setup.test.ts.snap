// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generate:setup APIKEY create setup files  1`] = `
"/*
  The purpose of this component is to save scenario credentials.
  This file has been generated automatically and should not be edited.
*/

import { RootComponent, State, Prop } from '@bearer/core'
import '@bearer/ui'

@RootComponent({
  group: 'setup',
  role: 'action'
})
export class SetupAction {
  @Prop() onSetupSuccess: (detail: any) => void = (_any: any) => {}
  @State() fields = [{\\"type\\":\\"password\\",\\"label\\":\\"Api Key\\",\\"controlName\\":\\"apiKey\\"}]
  @State() innerListener = \`setup_success:BEARER_SCENARIO_ID\`
  render() {
    return (
      <bearer-dropdown-button innerListener={this.innerListener}>
        <span slot=\\"dropdown-btn-content\\">Setup component</span>
        <bearer-setup onSetupSuccess={this.onSetupSuccess} scenarioId=\\"BEARER_SCENARIO_ID\\" fields={this.fields} />
      </bearer-dropdown-button>
    )
  }
}
"
`;

exports[`generate:setup APIKEY create setup files  2`] = `
"/*
  The purpose of this component is to save scenario credentials.
*/

import { RootComponent } from \\"@bearer/core\\";
import \\"@bearer/ui\\";

@RootComponent({
  group: \\"setup\\",
  role: 'display'
})
export class SetupDisplay {
  render() {
    return (
      <bearer-setup-display scenarioId=\\"BEARER_SCENARIO_ID\\" setupId={(this as any).setupId} />
    )
  }
}
"
`;

exports[`generate:setup BASIC create setup files  1`] = `
"/*
  The purpose of this component is to save scenario credentials.
  This file has been generated automatically and should not be edited.
*/

import { RootComponent, State, Prop } from '@bearer/core'
import '@bearer/ui'

@RootComponent({
  group: 'setup',
  role: 'action'
})
export class SetupAction {
  @Prop() onSetupSuccess: (detail: any) => void = (_any: any) => {}
  @State() fields = [{\\"type\\":\\"text\\",\\"label\\":\\"Username\\",\\"controlName\\":\\"username\\"},{\\"type\\":\\"password\\",\\"label\\":\\"Password\\",\\"controlName\\":\\"password\\"}]
  @State() innerListener = \`setup_success:BEARER_SCENARIO_ID\`
  render() {
    return (
      <bearer-dropdown-button innerListener={this.innerListener}>
        <span slot=\\"dropdown-btn-content\\">Setup component</span>
        <bearer-setup onSetupSuccess={this.onSetupSuccess} scenarioId=\\"BEARER_SCENARIO_ID\\" fields={this.fields} />
      </bearer-dropdown-button>
    )
  }
}
"
`;

exports[`generate:setup BASIC create setup files  2`] = `
"/*
  The purpose of this component is to save scenario credentials.
*/

import { RootComponent } from \\"@bearer/core\\";
import \\"@bearer/ui\\";

@RootComponent({
  group: \\"setup\\",
  role: 'display'
})
export class SetupDisplay {
  render() {
    return (
      <bearer-setup-display scenarioId=\\"BEARER_SCENARIO_ID\\" setupId={(this as any).setupId} />
    )
  }
}
"
`;

exports[`generate:setup OAUTH2 create setup files  1`] = `
"/*
  The purpose of this component is to save scenario credentials.
  This file has been generated automatically and should not be edited.
*/

import { RootComponent, State, Prop } from '@bearer/core'
import '@bearer/ui'

@RootComponent({
  group: 'setup',
  role: 'action'
})
export class SetupAction {
  @Prop() onSetupSuccess: (detail: any) => void = (_any: any) => {}
  @State() fields = [{\\"type\\":\\"text\\",\\"label\\":\\"Client ID\\",\\"controlName\\":\\"clientID\\"},{\\"type\\":\\"password\\",\\"label\\":\\"Client Secret\\",\\"controlName\\":\\"clientSecret\\"}]
  @State() innerListener = \`setup_success:BEARER_SCENARIO_ID\`
  render() {
    return (
      <bearer-dropdown-button innerListener={this.innerListener}>
        <span slot=\\"dropdown-btn-content\\">Setup component</span>
        <bearer-setup onSetupSuccess={this.onSetupSuccess} scenarioId=\\"BEARER_SCENARIO_ID\\" fields={this.fields} />
      </bearer-dropdown-button>
    )
  }
}
"
`;

exports[`generate:setup OAUTH2 create setup files  2`] = `
"/*
  The purpose of this component is to save scenario credentials.
*/

import { RootComponent } from \\"@bearer/core\\";
import \\"@bearer/ui\\";

@RootComponent({
  group: \\"setup\\",
  role: 'display'
})
export class SetupDisplay {
  render() {
    return (
      <bearer-setup-display scenarioId=\\"BEARER_SCENARIO_ID\\" setupId={(this as any).setupId} />
    )
  }
}
"
`;
